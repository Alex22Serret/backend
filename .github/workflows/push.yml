on: push

name: deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack (start)
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"üöÄ Despliegue iniciado para *${{ github.repository }}* en commit \`${{ github.sha }}\`\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/checkout@v4

      - name: Extract repo name
        id: repo
        run: echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV

      - name: Set up Python (o Node.js, etc.)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt  # o npm install, etc.

      - name: Run tests
        run: pytest  # o tu framework de pruebas

      - name: Login to Docker Hub
        if: success()  # solo si pruebas pasan
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ github.sha }}

      - name: Notify Slack (success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"‚úÖ Despliegue exitoso de *${{ github.repository }}* en commit \`${{ github.sha }}\`\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (failure)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"‚ùå Fallo en el despliegue de *${{ github.repository }}* en commit \`${{ github.sha }}\`\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
