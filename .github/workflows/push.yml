notify_end:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare End Slack message
        id: end_message
        run: |
          REPO_NAME=$(basename ${{ github.repository }})
          REPO_URL="${{ github.server_url }}/${{ github.repository }}"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMIT_SHA_SHORT="${{ github.sha_short }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          ACTOR="${{ github.actor }}"

          # Obtener el estado del job de despliegue
          DEPLOY_STATUS=${{ needs.deploy.result }} 

          MESSAGE=""
          COLOR=""

          if [ "${DEPLOY_STATUS}" == "success" ]; then
            MESSAGE=":white_check_mark: *Pipeline de ${REPO_NAME} finalizada con ÉXITO* :tada:\n"
            MESSAGE+="Commit: \`${COMMIT_SHA_SHORT}\` by _${ACTOR}_\n"
            MESSAGE+="Mensaje: _${COMMIT_MESSAGE}_\n"
            COLOR="good" # Verde
          elif [ "${DEPLOY_STATUS}" == "failure" ]; then
            MESSAGE=":x: *Pipeline de ${REPO_NAME} ha FALLADO* :sad_face:\n"
            MESSAGE+="Commit: \`${COMMIT_SHA_SHORT}\` by _${ACTOR}_\n"
            MESSAGE+="Mensaje: _${COMMIT_MESSAGE}_\n"
            COLOR="danger" # Rojo
          else
            # Otros estados como 'cancelled' o 'skipped' (por ejemplo, si el job 'deploy' fue cancelado)
            MESSAGE=":grey_question: *Pipeline de ${REPO_NAME} finalizada con estado: ${DEPLOY_STATUS}* \n" # Usamos la variable de shell aquí
            MESSAGE+="Commit: \`${COMMIT_SHA_SHORT}\` by _${ACTOR}_\n"
            MESSAGE+="Mensaje: _${COMMIT_MESSAGE}_\n"
            COLOR="#808080" # Gris
          fi

          MESSAGE+="<${RUN_URL}|Ver ejecución en GitHub Actions>"

          echo "slack_text=${MESSAGE}" >> "$GITHUB_OUTPUT" # Nueva forma de establecer salidas
          echo "slack_color=${COLOR}" >> "$GITHUB_OUTPUT"   # Nueva forma de establecer salidas

      - name: Send Slack end notification
        uses: slackapi/slack-notify-action@v1.2.0
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "attachments": [
                {
                  "color": "${{ steps.end_message.outputs.slack_color }}",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ steps.end_message.outputs.slack_text }}"
                      }
                    }
                  ]
                }
              ]
            }